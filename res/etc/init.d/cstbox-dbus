#! /bin/bash
### BEGIN INIT INFO
# Provides:          cstbox-dbus
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: CSTBox private D-Bus session bus daemon service
# Description:       This service must be started before any other D-Bus dependant
#                    service of the CSTBox environment.
### END INIT INFO

# This file is part of CSTBox.
#
# CSTBox is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CSTBox is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with CSTBox.  If not, see <http://www.gnu.org/licenses/>.

# Author: Eric Pascual <eric.pascual@cstb.fr>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="CSTBox session bus"
NAME=cstbox-dbus
INIT_SEQ=20
CORE_SVC=1
DAEMON=/usr/bin/dbus-launch
DAEMON_ARGS="--sh-syntax"
VARRUN=/var/run/cstbox
PIDFILE=$VARRUN/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

INIT_VERBOSE=yes
DBUS_VARS_FILE="$VARRUN/$NAME"

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

case "$1" in
  start)
        if [ ! -x $DAEMON ] ; then
            log_failure_msg "$DAEMON not found on this system" 
            rc=2
        else
            [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" 
            if [ -f $DBUS_VARS_FILE ] ; then
                    rc=1
            else
                    # creates our private /var/run subdir if not yet here
                    [ -d "$VARRUN" ] || mkdir -p $VARRUN

                    $DAEMON $DAEMON_ARGS > $DBUS_VARS_FILE
                    if [ $? -eq 0 ] ; then 
                        . $DBUS_VARS_FILE
                        echo $DBUS_SESSION_BUS_PID > $PIDFILE
                        rc=0 
                    else 
                        rc=2
                    fi
            fi 
        fi
		case "$rc" in
			0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
			2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
		esac
		;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" 
	if [ -f $DBUS_VARS_FILE ] ; then
		. $DBUS_VARS_FILE
		kill $DBUS_SESSION_BUS_PID
		rm $DBUS_VARS_FILE $PIDFILE
		rc=0
	else
		rc=1
	fi
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
	if [ -f $DBUS_VARS_FILE ] ; then
		log_success_msg "$NAME is running"
		exit 0
	else
		log_failure_msg "$NAME is not running"
		exit 2
	fi
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status}" >&2
	exit 3
	;;
esac
