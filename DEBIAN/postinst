#!/bin/bash

set -e

CSTBOX_HOME="/opt/cstbox"
PYCSTBOX_HOME="$CSTBOX_HOME/lib/python/pycstbox"

AUTO_START=${AUTO_START:=0}

echo "Adding static mapping of USB ports..."

UDEV_RULES_TARGET="/etc/udev/rules.d/70-persistent-usb.rules"
UDEV_RULES_LIB="$CSTBOX_HOME/lib/udev-rules.d"
UDEV_RULES_EMPTY="$UDEV_RULES_LIB/empty.rules"

hw=$(grep -q Hardware /proc/cpuinfo)
if [ -n "$hw" ] ; then
    tokens=($hw)
    cpumodel=${tokens[2]}

    case "$cpumodel" in
    BCM2835)
        SYSTEM_MANUFACTURER="Raspberry"
        SYSTEM_PRODUCT_NAME="3B"
        ;;
    BCM2836)
        SYSTEM_MANUFACTURER="Raspberry"
        SYSTEM_PRODUCT_NAME="2B"
        ;;
    BCM2835)
        SYSTEM_MANUFACTURER="Raspberry"
        SYSTEM_PRODUCT_NAME="1B"
        ;;
    esac

else
    DMIDECODE=$(whereis -b dmidecode | cut -d: -f2 | tr -d ' ')
    if [ -n "$DMIDECODE" ]; then
        SYSTEM_MANUFACTURER=$($DMIDECODE -s system-manufacturer)
        SYSTEM_PRODUCT_NAME=$($DMIDECODE -s system-product-name | tr ' ' '_')
    else
        echo "*** dmidecode not installed ***"
    fi
fi

if [ -z "$SYSTEM_MANUFACTURER" ] ; then
    echo " => cannot identify which kind of machine is used for the box"
    echo " => you'll have to complete $UDEV_RULES_TARGET by hand"
    cp $UDEV_RULES_EMPTY $UDEV_RULES_TARGET
else
    echo "  looking for Manufacturer=$SYSTEM_MANUFACTURER and Product=$SYSTEM_PRODUCT_NAME in rules database..."

    UDEV_RULES_SRC=$(echo "$UDEV_RULES_LIB/$SYSTEM_MANUFACTURER-$SYSTEM_PRODUCT_NAME.rules" | tr ' ' '_')
    if [ -r $UDEV_RULES_SRC ]; then
        cp $UDEV_RULES_SRC $UDEV_RULES_TARGET
        echo "  --> rules found and installed as $UDEV_RULES_TARGET"
    else
        cp $UDEV_RULES_EMPTY $UDEV_RULES_TARGET
        echo "  *** no match"
        echo " => you'll have to complete $UDEV_RULES_TARGET by hand"
    fi
fi

# Add CSTBox meta service to the init process

# Note that since individual services are in the init.d directory, it will
# still be possible to start/stop them individually, but they are not included
# explicitly in the startup sequence.
# This is done this way so that services added by extension packages are 
# automatically integrated in the start/stop process, thanks to the automatic 
# discovery executed each time the "service cstbox start/stop" command is executed.

echo "Adding CSTBox services in system init sequence..."
update-rc.d cstbox defaults > /dev/null

# Start it now if requested
echo "Auto start option set to : $AUTO_START"
if [ "$AUTO_START" == "1" ] ; then
    /etc/init.d/cstbox start
else
    echo "[W] enter 'service cstbox start' as root to start CSTBox framework."
fi
